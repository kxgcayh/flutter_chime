import Foundation

class MethodCallFlutter {
    static let GET_PLATFORM_VERSION = "getPlatformVersion"
    static let MANAGE_AUDIO_PERMISSIONS = "manageAudioPermissions"
    static let MANAGE_VIDEO_PERMISSIONS = "manageVideoPermissions"
    static let INITIAL_AUDIO_SELECTION = "initialAudioSelection"
    static let JOIN = "join"
    static let STOP = "stop"
    static let LEAVE = "leave"
    static let DROP = "drop"
    static let MUTE = "mute"
    static let UNMUTE = "unmute"
    static let START_LOCAL_VIDEO = "startLocalVideo"
    static let STOP_LOCAL_VIDEO = "stopLocalVideo"
    static let VIDEO_TILE_ADD = "videoTileAdd"
    static let VIDEO_TILE_REMOVE = "videoTileRemove"
    static let LIST_AUDIO_DEVICES = "listAudioDevices"
    static let UPDATE_AUDIO_DEVICE = "updateAudioDevice"
    static let AUDIO_SESSION_DID_STOP = "audioSessionDidStop"
    static let VOLUME_CHANGED = "volumeChanged"
    static let SIGNAL_STRENGTH_CHANGED = "signalStrengthChanged"
    static let DATA_MESSAGE_RECEIVED = "dataMessageReceived"
    static let AUDIO_SESSION_STARTED_CONNECTING = "audioSessionStartedConnecting"
    static let AUDIO_SESSION_STARTED = "audioSessionStarted"
    static let AUDIO_SESSION_DROPPED = "audioSessionDropped"
    static let AUDIO_SESSION_CANCELLED_RECONNECT = "audioSessionCancelledReconnect"
    static let CONNECTION_RECOVERED = "connectionRecovered"
    static let CONNECTION_BECAME_POOR = "connectionBecamePoor"
    static let REMOTE_VIDEO_SOURCE_UNAVAILABLE = "remoteVideoSourceUnavailable"
    static let REMOTE_VIDEO_SOURCE_AVAILABLE = "remoteVideoSourceAvailable"
    static let VIDEO_SESSION_STARTED = "videoSessionStarted"
    static let VIDEO_SESSION_STARTED_CONNECTING = "videoSessionStartedConnecting"
    static let VIDEO_SESSION_STOPPED = "videoSessionStopped"
    static let PAUSE_VIDEO_TILE = "pauseVideoTile"
    static let RESUME_VIDEO_TILE = "resumeVideoTile"
}